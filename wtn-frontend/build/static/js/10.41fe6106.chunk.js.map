{"version":3,"sources":["views/_AdminViews_/Accounts/hooks/account-context.js","views/_AdminViews_/Accounts/components/Header/Header.js","views/_AdminViews_/Accounts/components/Results/Results.js","views/_AdminViews_/Accounts/Accounts.js","hooks/use-paginate.js","hooks/use-toggle.js","../node_modules/@material-ui/icons/Person.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js"],"names":["accountContext","React","createContext","useAccountContext","context","useContext","undefined","Error","AccountsProvider","props","useState","accounts","setAccounts","loading","setLoading","error","setError","getAccounts","a","axios","get","data","res","useEffect","value","useMemo","addAccount","account","post","Provider","children","useStyles","makeStyles","root","modal","display","alignItems","justifyContent","form","width","maxWidth","Header","className","rest","openAddSomeoneModal","useToggle","useForm","onSubmit","reset","handleClose","classes","clsx","Grid","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","onClick","handleOpen","color","Modal","open","is_open","onClose","Card","CardHeader","title","CardContent","handleSubmit","autoComplete","xs","FormControl","fullWidth","formControl","FormLabel","TextField","register","type","Select","MenuItem","disabled","formState","isSubmitting","theme","content","padding","inner","minWidth","nameCell","avatar","height","marginRight","actions","Results","handleDeleteOne","roleMap","instructor","admin","usePaginate","page","rowsPerPage","handleChangePage","handleChangeRowsPerPage","length","Math","ceil","action","Divider","Table","TableHead","TableRow","TableCell","align","TableBody","slice","map","hover","key","uid","Avatar","src","photoURL","displayName","email","customClaims","role","RouterLink","size","to","colspan","colSpan","LinearProgress","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","results","marginTop","ClassroomPeople","require","setPage","setRowsPerPage","event","target","initialState","setOpen","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","createSvgIcon","tablelvl2","ref","_props$component","Component","other","_objectWithoutProperties","Tablelvl2Context","_extends","withStyles","name","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","backIconButtonProps","nextIconButtonProps","_props$onChangePage","_props$onPageChange","onPageChange","useTheme","IconButton","direction","defaultLabelDisplayedRows","from","concat","defaultRowsPerPageOptions","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onRowsPerPageChangeProp","onRowsPerPageChange","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","Toolbar","toolbar","spacer","caption","id","select","icon","selectIcon","input","InputBase","selectRoot","onChange","rowsPerPageOption","menuItem","label","min","palette","text","primary","fontSize","typography","pxToRem","overflow","minHeight","paddingRight","flex","flexShrink","marginLeft","paddingLeft","textAlign","textAlignLast"],"mappings":"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","file":"static/js/10.41fe6106.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"services/axios\";\n\nconst accountContext = React.createContext();\n\nexport const useAccountContext = () => {\n  const context = React.useContext(accountContext);\n  if (context === undefined) {\n    throw new Error(\"useAccountContext must be used within a AccountProvider\");\n  }\n  return context;\n};\n\nexport const AccountsProvider = (props) => {\n  const [accounts, setAccounts] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n\n  const getAccounts = async () => {\n    try {\n      const res = await (await axios.get(\"/users\")).data;\n\n      setAccounts(res.data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getAccounts();\n  }, []);\n\n  const value = React.useMemo(() => {\n    const addAccount = async (account) => {\n      try {\n        const res = await (await axios.post(\"/users\", account)).data;\n        getAccounts();\n        return res;\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    return {\n      accounts,\n      loading,\n      error,\n      addAccount,\n    };\n  }, [accounts, loading, error]);\n\n  return (\n    <accountContext.Provider value={value}>\n      {props.children}\n    </accountContext.Provider>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  FormControl,\n  FormLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport useToggle from \"hooks/use-toggle\";\nimport { useForm } from \"react-hook-form\";\nimport { useAccountContext } from \"../../hooks/account-context\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    maxWidth: \"600px\",\n  },\n}));\n\nconst Header = (props) => {\n  const { className, openAddSomeoneModal, ...rest } = props;\n  const modal = useToggle(false);\n  const form = useForm();\n\n  const { addAccount } = useAccountContext();\n\n  const onSubmit = async (data) => {\n    await addAccount(data);\n    form.reset();\n    modal.handleClose();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <Grid\n          alignItems=\"flex-end\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography component=\"h2\" gutterBottom variant=\"overline\">\n              Quản lý\n            </Typography>\n            <Typography component=\"h1\" variant=\"h3\">\n              Tài khoản\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              onClick={modal.handleOpen}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Thêm tài khoản\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n\n      <Modal\n        className={classes.modal}\n        open={modal.is_open}\n        onClose={modal.handleClose}\n      >\n        <Card>\n          <CardHeader\n            title={<Typography variant=\"h2\">Thêm tài khoản</Typography>}\n          />\n          <CardContent>\n            <form\n              className={classes.form}\n              onSubmit={form.handleSubmit(onSubmit)}\n              autoComplete=\"off\"\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <FormControl\n                    fullWidth\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                  >\n                    <FormLabel component=\"legend\">Họ tên</FormLabel>\n                    <TextField\n                      {...form.register(\"displayName\")}\n                      fullWidth\n                      variant=\"outlined\"\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControl\n                    fullWidth\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                  >\n                    <FormLabel component=\"legend\">Email</FormLabel>\n                    <TextField\n                      {...form.register(\"email\")}\n                      fullWidth\n                      variant=\"outlined\"\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <Grid item xs={12}>\n                    <FormControl\n                      fullWidth\n                      variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <FormLabel component=\"legend\">Mật khẩu</FormLabel>\n                      <TextField\n                        type=\"password\"\n                        {...form.register(\"password\")}\n                        fullWidth\n                        variant=\"outlined\"\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControl\n                    fullWidth\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                  >\n                    <FormLabel component=\"legend\">Loại tài khoản</FormLabel>\n                    <Select {...form.register(\"role\")}>\n                      <MenuItem value={\"admin\"}>Admin</MenuItem>\n                      <MenuItem value={\"instructor\"}>Giảng viên</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={form.formState.isSubmitting}\n                  >\n                    Thêm\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </Modal>\n    </>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Header;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  LinearProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\n\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport { GenericMoreButton } from \"components\";\nimport usePaginate from \"hooks/use-paginate\";\nimport { useAccountContext } from \"../../hooks/account-context\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 700,\n  },\n  nameCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1),\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, handleDeleteOne, ...rest } = props;\n\n  const { accounts } = useAccountContext();\n  const classes = useStyles();\n\n  const roleMap = {\n    instructor: \"Giảng viên\",\n    admin: \"Quản trị viên\",\n  };\n\n  const {\n    page,\n    rowsPerPage,\n    handleChangePage,\n    handleChangeRowsPerPage,\n  } = usePaginate();\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n        Tổng {accounts.length} tài khoản.\n        {Math.ceil(accounts.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader action={<GenericMoreButton />} title=\"Tất cả tài khoản\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Họ tên {\"&\"} Email</TableCell>\n                    <TableCell>Vai trò</TableCell>\n                    <TableCell align=\"right\">Tác vụ</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {accounts.length > 0 ? (\n                    accounts.slice(0, rowsPerPage).map((account) => (\n                      <TableRow hover key={account.uid}>\n                        <TableCell>\n                          <div className={classes.nameCell}>\n                            <Avatar\n                              src={account.photoURL}\n                              className={classes.avatar}\n                            >\n                              <PersonIcon />\n                            </Avatar>\n                            <div>\n                              <Typography variant=\"h6\">\n                                {account.displayName}\n                              </Typography>\n                              <div>{account.email}</div>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          {roleMap[account.customClaims?.role] || \"Học viên\"}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <Button\n                            component={RouterLink}\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            to={`/admin/accounts/${account.uid}`}\n                          >\n                            Chi tiết\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow colspan=\"4\">\n                      <td colSpan=\"100\">\n                        <LinearProgress />\n                      </td>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={accounts.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Results;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { Page } from \"components\";\nimport { Header, Results } from \"./components\";\nimport { AccountsProvider } from \"./hooks/account-context\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n  modal: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst ClassroomPeople = () => {\n  const classes = useStyles();\n\n  return (\n    <AccountsProvider>\n      <Page className={classes.root} title=\"Quản lý tài khoản\">\n        <Header />\n        {<Results className={classes.results} />}\n      </Page>\n    </AccountsProvider>\n  );\n};\n\nexport default ClassroomPeople;\n","const { useState } = require(\"react\");\n\nconst usePaginate = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return {\n    page,\n    rowsPerPage,\n    handleChangePage,\n    handleChangeRowsPerPage,\n  };\n};\n\nexport default usePaginate;\n","import { useState } from \"react\";\n\nconst useToggle = (initialState) => {\n  const [is_open, setOpen] = useState(initialState);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return {\n    is_open,\n    handleClose,\n    handleOpen,\n  };\n};\n\nexport default useToggle;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"],"sourceRoot":""}