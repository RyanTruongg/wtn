{"version":3,"sources":["views/_InstructorViews_/Questions/hooks/questions-context.js","views/_InstructorViews_/Questions/components/Header/Header.js","views/_InstructorViews_/Questions/components/Results/Results.js","views/_InstructorViews_/Questions/components/SearchBar/components/Filter/Filter.js","views/_InstructorViews_/Questions/components/SearchBar/components/Search/Search.js","views/_InstructorViews_/Questions/components/SearchBar/SearchBar.js","views/_InstructorViews_/Questions/Questions.js","hooks/use-paginate.js","hooks/use-toggle.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js"],"names":["questionsContext","React","createContext","useQuestionsContext","context","useContext","undefined","Error","QuestionsProvider","props","useState","questions","setQuestions","loading","setLoading","error","setError","getQuestions","a","axios","get","data","res","useEffect","value","useMemo","addQuestion","question","post","updateQuestion","put","id","deleteQuestion","delete","Provider","children","useStyles","makeStyles","root","modal","display","alignItems","justifyContent","card","maxHeight","overflow","width","form","maxWidth","position","submitBtn","padding","multiAnswers","marginBottom","label","defaultValue","content","subject","answers","short_name","status","InputWithStartAdornment","adornment","className","register","rest","classes","TextField","clsx","fullWidth","variant","InputProps","startAdornment","InputAdornment","Header","openAddQuestionModal","subjects","setSubjects","useToggle","useForm","defaultValues","onSubmit","console","log","reset","getSubjects","Grid","container","justify","spacing","item","Typography","component","gutterBottom","Button","onClick","handleOpen","color","Modal","open","is_open","onClose","handleClose","Card","CardHeader","title","CardContent","handleSubmit","autoComplete","xs","FormLabel","multiline","rows","name","control","render","field","disabled","length","select","map","MenuItem","key","getValues","answer","idx","Box","Checkbox","type","theme","inner","minWidth","nameCell","avatar","height","marginRight","actions","Results","reviewQuestion","setValue","subject_id","usePaginate","page","rowsPerPage","handleChangePage","handleChangeRowsPerPage","action","Divider","Table","TableHead","TableRow","TableCell","align","TableBody","slice","hover","subject_name","size","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultChecked","style","marginTop","defaultProps","flexDirection","drawer","header","buttonIcon","flexGrow","search","searchIcon","palette","icon","searchInput","searchButton","marginLeft","flexWrap","flexBasis","filterButton","filterIcon","results","placeItems","Questions","headless","require","setPage","setRowsPerPage","event","target","initialState","setOpen","createSvgIcon","d","tablelvl2","ref","_props$component","Component","other","_objectWithoutProperties","Tablelvl2Context","_extends","role","withStyles","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","backIconButtonProps","nextIconButtonProps","_props$onChangePage","_props$onPageChange","onPageChange","useTheme","IconButton","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onRowsPerPageChangeProp","onRowsPerPageChange","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","Toolbar","toolbar","spacer","caption","Select","selectIcon","input","InputBase","selectRoot","onChange","rowsPerPageOption","menuItem","min","text","primary","fontSize","typography","pxToRem","minHeight","paddingRight","flex","flexShrink","paddingLeft","textAlign","textAlignLast"],"mappings":"qaAGMA,EAAmBC,IAAMC,gBAElBC,EAAsB,WACjC,IAAMC,EAAUH,IAAMI,WAAWL,GACjC,QAAgBM,IAAZF,EACF,MAAM,IAAIG,MACR,8DAGJ,OAAOH,GAGII,EAAoB,SAACC,GAChC,MAAkCR,IAAMS,SAAS,IAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BX,IAAMS,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0Bb,IAAMS,SAAS,MAAzC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAY,uCAAG,4BAAAC,EAAA,+EAEQC,IAAMC,IAAI,cAFlB,8BAEiCC,KAFjC,OAEXC,EAFW,OAIjBV,EAAaU,EAAID,MACjBP,GAAW,GALM,kDAOjBE,EAAS,EAAD,IACRF,GAAW,GARM,0DAAH,qDAYlBb,IAAMsB,WAAU,WACdN,MACC,IAEH,IAAMO,EAAQvB,IAAMwB,SAAQ,WAiC1B,MAAO,CACLd,YACAE,UACAE,QACAW,YApCe,uCAAG,WAAOC,GAAP,eAAAT,EAAA,+EAESC,IAAMS,KAAK,aAAcD,GAFlC,8BAE6CN,KAF7C,cAEVC,EAFU,OAGhBL,IAHgB,kBAITK,GAJS,kCAMhBN,EAAS,EAAD,IANQ,0DAAH,sDAqCfa,eA3BkB,uCAAG,WAAOF,GAAP,eAAAT,EAAA,+EAGXC,IAAMW,IAAN,qBAAwBH,EAASI,IAAMJ,GAH5B,8BAIjBN,KAJiB,cAEbC,EAFa,OAKnBL,IALmB,kBAMZK,GANY,kCAQnBN,EAAS,EAAD,IARW,0DAAH,sDA4BlBgB,eAhBkB,uCAAG,WAAOD,GAAP,eAAAb,EAAA,+EAEMC,IAAMc,OAAN,qBAA2BF,IAFjC,8BAEwCV,KAFxC,cAEbC,EAFa,OAGnBL,IAHmB,kBAIZK,GAJY,kCAMnBN,EAAS,EAAD,IANW,0DAAH,yDAkBnB,CAACL,EAAWE,EAASE,IAExB,OACE,kBAACf,EAAiBkC,SAAlB,CAA2BV,MAAOA,GAC/Bf,EAAM0B,W,8ECzDPC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,GACNC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,KAAM,CACJC,UAAW,OACXC,SAAU,OACV,uBAAwB,CACtBC,MAAO,IAGXC,KAAM,CACJD,MAAO,OACPE,SAAU,QACVC,SAAU,YAGZC,UAAW,CACTC,QAAS,eAEXC,aAAc,CACZZ,QAAS,OACTa,aAAc,SACdZ,WAAY,UAEda,MAAO,CACLD,aAAc,eAIZE,EAAe,CACnBC,QAAS,GACTC,QAAS,GACTC,QAAS,CACP,CACEF,QAAS,GACTG,WAAY,IACZC,QAAQ,GAEV,CACEJ,QAAS,GACTG,WAAY,IACZC,QAAQ,GAEV,CACEJ,QAAS,GACTG,WAAY,IACZC,QAAQ,GAEV,CACEJ,QAAS,GACTG,WAAY,IACZC,QAAQ,KAKRC,EAA0B,SAACpD,GAC/B,IAAQqD,EAA4CrD,EAA5CqD,UAAWC,EAAiCtD,EAAjCsD,UAAWC,EAAsBvD,EAAtBuD,SAAaC,EAA3C,YAAoDxD,EAApD,GACMyD,EAAU9B,IAEhB,OACE,kBAAC+B,EAAA,EAAD,iBACMH,EACAC,EAFN,CAGEF,UAAWK,YAAKF,EAAQd,aAAcW,GACtCM,WAAS,EACTC,QAAQ,WACRC,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBxB,SAAS,SAASa,QAyK7BY,EAlKA,SAACjE,GAAW,IAAD,EAChBsD,EAA6CtD,EAA7CsD,UAAoCE,GAASxD,EAAlCkE,qBAAnB,YAAqDlE,EAArD,IAEA,EAAgCR,IAAMS,SAAS,IAA/C,mBAAOkE,EAAP,KAAiBC,EAAjB,KAEMX,EAAU9B,IACVG,EAAQuC,aAAU,GAClB/B,EAAOgC,YAAQ,CACnBC,cAAezB,IAGT7B,EAAgBvB,IAAhBuB,YAEFuD,EAAQ,uCAAG,WAAO5D,GAAP,SAAAH,EAAA,sEACTQ,EAAYL,GADH,OAEf6D,QAAQC,IAAI9D,GACZ0B,EAAKqC,QAHU,2CAAH,sDAgBd,OATAnF,IAAMsB,WAAU,YACG,uCAAG,4BAAAL,EAAA,sEACOC,IAAMC,IAAN,aADP,8BAC+BC,KAD/B,OACZC,EADY,OAGlBuD,EAAYvD,EAAID,MAHE,2CAAH,qDAKjBgE,KACC,IAGD,oCACE,yCAASpB,EAAT,CAAeF,UAAWK,YAAKF,EAAQ5B,KAAMyB,KAC3C,kBAACuB,EAAA,EAAD,CACE7C,WAAW,WACX8C,WAAS,EACTC,QAAQ,gBACRC,QAAS,GAET,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,cAAY,EAACvB,QAAQ,YAAhD,mBAGA,kBAACqB,EAAA,EAAD,CAAYC,UAAU,KAAKtB,QAAQ,MAAnC,0CAIF,kBAACgB,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACI,EAAA,EAAD,CACEC,QAASxD,EAAMyD,WACfC,MAAM,UACN3B,QAAQ,aAHV,8BAWN,kBAAC4B,EAAA,EAAD,CACEnC,UAAWG,EAAQ3B,MACnB4D,KAAM5D,EAAM6D,QACZC,QAAS9D,EAAM+D,aAEf,kBAACC,EAAA,EAAD,CAAMxC,UAAWG,EAAQvB,MACvB,kBAAC6D,EAAA,EAAD,CACEC,MACE,kBAACd,EAAA,EAAD,CAAYrB,QAAQ,MAApB,mDAGJ,kBAACoC,EAAA,EAAD,KACE,0BACE3C,UAAWG,EAAQnB,KACnBkC,SAAUlC,EAAK4D,aAAa1B,GAC5B2B,aAAa,OAEb,kBAACtB,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,GACvB,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACC,EAAA,EAAD,CAAW/C,UAAWG,EAAQZ,MAAOsC,UAAU,UAA/C,iCAGA,kBAACzB,EAAA,EAAD,iBACMpB,EAAKiB,SAAS,WADpB,CAEEK,WAAS,EACT0C,WAAS,EACTC,KAAM,EACN1C,QAAQ,eAIZ,kBAACgB,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACC,EAAA,EAAD,CAAW/C,UAAWG,EAAQZ,MAAOsC,UAAU,UAA/C,mBAGA,kBAAC,IAAD,CACEqB,KAAK,aACLC,QAASnE,EAAKmE,QACdC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,kBAACjD,EAAA,EAAD,eACEkD,SAAUzC,EAAS0C,QAAU,EAC7BC,QAAM,GACFH,EAHN,CAIE9C,QAAQ,WACRD,WAAS,IAERO,EAAS4C,KAAI,SAAC/D,GAAD,OACZ,kBAACgE,EAAA,EAAD,CAAUC,IAAKjE,EAAQ1B,GAAIP,MAAOiC,EAAQ1B,IACvC0B,EAAQwD,cAQrB,kBAAC3B,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACC,EAAA,EAAD,CAAW/C,UAAWG,EAAQZ,MAAOsC,UAAU,UAA/C,4BADF,UAIG7C,EAAK4E,UAAU,kBAJlB,aAIG,EAA2BH,KAAI,SAACI,EAAQC,GAAT,OAC9B,kBAACC,EAAA,EAAD,CACEJ,IAAKE,EAAOjE,WACZI,UAAWG,EAAQd,cAEnB,kBAAC,EAAD,CACEY,SAAQ,eACHjB,EAAKiB,SAAL,kBAAyB6D,EAAzB,cAEL/D,UAAW8D,EAAOjE,WAAa,MAEjC,kBAACoE,EAAA,EAAD,iBACMhF,EAAKiB,SAAL,kBAAyB6D,EAAzB,YADN,CAEE5B,MAAM,kBAMd,kBAACX,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACf,EAAA,EAAD,CACE/B,UAAWG,EAAQhB,UACnB8E,KAAK,SACL1D,QAAQ,YACR2B,MAAM,UACN5B,WAAS,GALX,mC,2KC9MZjC,EAAYC,aAAW,SAAC4F,GAAD,MAAY,CACvC3F,KAAM,GACNkB,QAAS,CACPL,QAAS,GAEX+E,MAAO,CACLC,SAAU,KAEZC,SAAU,CACR5F,QAAS,OACTC,WAAY,UAEd4F,OAAQ,CACNC,OAAQ,GACRxF,MAAO,GACPyF,YAAaN,EAAMxC,QAAQ,IAE7B+C,QAAS,CACPrF,QAAS8E,EAAMxC,QAAQ,GACvB/C,eAAgB,YAElBH,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,KAAM,CACJC,UAAW,OACXC,SAAU,OACV,uBAAwB,CACtBC,MAAO,IAGXC,KAAM,CACJD,MAAO,OACPE,SAAU,QACVC,SAAU,YAGZC,UAAW,CACTC,QAAS,eAEXC,aAAc,CACZZ,QAAS,OACTa,aAAc,SACdZ,WAAY,UAEda,MAAO,CACLD,aAAc,eAIZQ,EAA0B,SAACpD,GAC/B,IAAQqD,EAA4CrD,EAA5CqD,UAAWC,EAAiCtD,EAAjCsD,UAAWC,EAAsBvD,EAAtBuD,SAAaC,EAA3C,YAAoDxD,EAApD,GACMyD,EAAU9B,IAEhB,OACE,kBAAC+B,EAAA,EAAD,iBACMH,EACAC,EAFN,CAGEF,UAAWK,YAAKF,EAAQd,aAAcW,GACtCM,WAAS,EACTC,QAAQ,WACRC,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBxB,SAAS,SAASa,QAOtC2E,GAAU,SAAChI,GAAW,IAAD,EACjBsD,EAAuCtD,EAAvCsD,UAA8BE,GAASxD,EAA5BiI,eAAnB,YAA+CjI,EAA/C,IAEMyD,EAAU9B,IACVG,EAAQuC,aAAU,GAClB/B,EAAOgC,cACb,EAAsD5E,IAA9CQ,EAAR,EAAQA,UAAWkB,EAAnB,EAAmBA,eAAgBG,EAAnC,EAAmCA,eAEnC,EAAgC/B,IAAMS,SAAS,IAA/C,mBAAOkE,EAAP,KAAiBC,EAAjB,KACA5E,IAAMsB,WAAU,YACG,uCAAG,4BAAAL,EAAA,sEACOC,IAAMC,IAAN,aADP,8BAC+BC,KAD/B,OACZC,EADY,OAGlBuD,EAAYvD,EAAID,MAHE,2CAAH,qDAKjBgE,KACC,IAEH,IAAMJ,EAAQ,uCAAG,WAAO5D,GAAP,SAAAH,EAAA,sEACTW,EAAeR,GADN,2CAAH,sDAId6D,QAAQC,IAAIP,GAEZ,IAAM3D,EAAY,uCAAG,WAAOc,GAAP,eAAAb,EAAA,sEACMC,IAAMC,IAAN,qBAAwBW,IAD9B,8BACqCV,KADrC,OACbC,EADa,OAGnByB,EAAK4F,SAAS,KAAM5G,GACpBgB,EAAK4F,SAAS,UAAWrH,EAAID,KAAKmC,SAClCT,EAAK4F,SAAS,aAAcrH,EAAID,KAAKuH,YACrC7F,EAAK4F,SAAS,UAAWrH,EAAID,KAAKqC,SAClCnB,EAAMyD,aAPa,4CAAH,sDAUlB,GAKI6C,cAJFC,GADF,GACEA,KACAC,GAFF,GAEEA,YACAC,GAHF,GAGEA,iBACAC,GAJF,GAIEA,wBAGF,OACE,oCACE,yCAAShF,EAAT,CAAeF,UAAWK,YAAKF,EAAQ5B,KAAMyB,KAC3C,kBAAC4B,EAAA,EAAD,CAAYM,MAAM,gBAAgBJ,cAAY,EAACvB,QAAQ,SAAvD,aACQ3D,EAAU2G,OADlB,oBAGA,kBAACf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY0C,OAAQ,kBAAC,IAAD,MAAuBzC,MAAM,qCACjD,kBAAC0C,EAAA,EAAD,MAEA,kBAACzC,EAAA,EAAD,CAAa3C,UAAWG,EAAQV,SAC9B,kBAAC,IAAD,KACE,yBAAKO,UAAWG,EAAQgE,OACtB,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,sBACA,kBAACA,EAAA,EAAD,wBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBAGJ,kBAACC,EAAA,EAAD,KACG9I,EAAU+I,MAAM,EAAGX,IAAavB,KAAI,SAAC7F,GAAD,OACnC,kBAAC2H,EAAA,EAAD,CAAUK,OAAK,EAACjC,IAAK/F,EAASI,IAC5B,kBAACwH,EAAA,EAAD,KACE,yBAAKxF,UAAWG,EAAQkE,UACtB,6BACE,kBAACzC,EAAA,EAAD,CAAYM,MAAM,UAAU3B,QAAQ,MACjC3C,EAAS6B,YAKlB,kBAAC+F,EAAA,EAAD,KAAY5H,EAASiI,cAErB,kBAACL,EAAA,EAAD,CAAWC,MAAM,SACf,kBAAC1D,EAAA,EAAD,CACEG,MAAM,UACN4D,KAAK,QACLvF,QAAQ,WACRyB,QAAS,kBAAM9E,EAAaU,EAASI,MAJvC,2BAgBhB,kBAAC+H,EAAA,EAAD,CAAa/F,UAAWG,EAAQsE,SAC9B,kBAACuB,EAAA,EAAD,CACEnE,UAAU,MACVoE,MAAOrJ,EAAU2G,OACjB2C,aAAcjB,GACdkB,oBAAqBjB,GACrBH,KAAMA,GACNC,YAAaA,GACboB,mBAAoB,CAAC,EAAG,GAAI,SAKpC,kBAACjE,EAAA,EAAD,CACEnC,UAAWG,EAAQ3B,MACnB4D,KAAM5D,EAAM6D,QACZC,QAAS9D,EAAM+D,aAEf,kBAACC,EAAA,EAAD,CAAMxC,UAAWG,EAAQvB,MACvB,kBAAC6D,EAAA,EAAD,CACEC,MACE,kBAACd,EAAA,EAAD,CAAYrB,QAAQ,MAApB,mDAGJ,kBAACoC,EAAA,EAAD,KACE,0BACE3C,UAAWG,EAAQnB,KACnBkC,SAAUlC,EAAK4D,aAAa1B,GAC5B2B,aAAa,OAEb,kBAACtB,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,GACvB,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACC,EAAA,EAAD,CAAW/C,UAAWG,EAAQZ,MAAOsC,UAAU,UAA/C,iCAGA,kBAACzB,EAAA,EAAD,iBACMpB,EAAKiB,SAAS,WADpB,CAEEK,WAAS,EACT0C,WAAS,EACTC,KAAM,EACN1C,QAAQ,eAIZ,kBAACgB,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACC,EAAA,EAAD,CAAW/C,UAAWG,EAAQZ,MAAOsC,UAAU,UAA/C,mBAGA,kBAAC,IAAD,CACEqB,KAAK,aACLC,QAASnE,EAAKmE,QACdC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,kBAACjD,EAAA,EAAD,eACEkD,UAAkB,OAARzC,QAAQ,IAARA,OAAA,EAAAA,EAAU0C,SAAU,EAC9BC,QAAM,GACFH,EAHN,CAIE9C,QAAQ,WACRD,WAAS,IALX,OAOGO,QAPH,IAOGA,OAPH,EAOGA,EAAU4C,KAAI,SAAC/D,GAAD,OACb,kBAACgE,EAAA,EAAD,CAAUC,IAAKjE,EAAQ1B,GAAIP,MAAOiC,EAAQ1B,IACvC0B,EAAQwD,cAQrB,kBAAC3B,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACC,EAAA,EAAD,CAAW/C,UAAWG,EAAQZ,MAAOsC,UAAU,UAA/C,4BADF,UAIG7C,EAAK4E,UAAU,kBAJlB,aAIG,EAA2BH,KAAI,SAACI,EAAQC,GAAT,OAC9B,kBAACC,EAAA,EAAD,CAAKJ,IAAKG,EAAK9D,UAAWG,EAAQd,cAChC,kBAAC,EAAD,CACEY,SAAQ,eACHjB,EAAKiB,SAAL,kBAAyB6D,EAAzB,cAEL/D,UAAW+D,EAAM,MAGnB,kBAACE,EAAA,EAAD,eACEqC,eAAgBxC,EAAOhE,QACnBb,EAAKiB,SAAL,kBAAyB6D,EAAzB,YAFN,CAGE5B,MAAM,kBAMd,kBAACX,EAAA,EAAD,CAAMI,MAAI,EAACmB,GAAI,IACb,kBAACf,EAAA,EAAD,CACE/B,UAAWG,EAAQhB,UACnB8E,KAAK,SACL1D,QAAQ,YACR2B,MAAM,UACN5B,WAAS,GALX,sBAUA,kBAAC,IAAD,CACEN,UAAWG,EAAQhB,UACnBoB,QAAQ,YACRD,WAAS,EACTgG,MAAO,CAAEC,UAAW,QACpBvE,QAAS,WACP/D,EAAee,EAAK4E,UAAU,OAC9BpF,EAAM+D,gBAPV,kCA2BlBmC,GAAQ8B,aAAe,CACrB5J,UAAW,IAGE8H,U,sCCrUGpG,aAAW,SAAA4F,GAAK,MAAK,CACrC3F,KAAM,CACJgG,OAAQ,OACR9F,QAAS,OACTgI,cAAe,UAEjBC,OAAQ,CACN3H,MAAO,IACPE,SAAU,QAEZ0H,OAAQ,CACNvH,QAAS8E,EAAMxC,QAAQ,EAAG,GAC1BjD,QAAS,OACTE,eAAgB,iBAElBiI,WAAY,CACVpC,YAAaN,EAAMxC,QAAQ,IAE7BjC,QAAS,CACPL,QAAS8E,EAAMxC,QAAQ,EAAG,GAC1BmF,SAAU,GAEZpC,QAAS,CACPrF,QAAS8E,EAAMxC,QAAQ,GACvB,YAAa,CACX6E,UAAWrC,EAAMxC,QAAQ,S,oBC3BbpD,aAAW,SAAA4F,GAAK,MAAK,CACrC3F,KAAM,CACJE,QAAS,OACTC,WAAY,UAEdoI,OAAQ,CACND,SAAU,EACVtC,OAAQ,GACRnF,QAAS8E,EAAMxC,QAAQ,EAAG,GAC1BjD,QAAS,OACTC,WAAY,UAEdqI,WAAY,CACVvC,YAAaN,EAAMxC,QAAQ,GAC3BQ,MAAOgC,EAAM8C,QAAQC,MAEvBC,YAAa,CACXL,SAAU,GAEZM,aAAc,CACZC,WAAYlD,EAAMxC,QAAQ,QClBZpD,aAAW,SAAA4F,GAAK,MAAK,CACrC3F,KAAM,CACJE,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChB0I,SAAU,QAEZP,OAAQ,CACND,SAAU,EACV5H,SAAU,IACVqI,UAAW,KAEbC,aAAc,CACZH,WAAY,QAEdI,WAAY,CACVhD,YAAaN,EAAMxC,QAAQ,Q,0BCjBzBrD,GAAYC,aAAW,SAAC4F,GAAD,MAAY,CACvC3F,KAAM,CACJa,QAAS8E,EAAMxC,QAAQ,IAEzB+F,QAAS,CACPlB,UAAWrC,EAAMxC,QAAQ,IAE3BlD,MAAO,CACLC,QAAS,OACTiJ,WAAY,cAsBDC,GAlBG,SAACjL,GACjB,IAAQkL,EAAiClL,EAAjCkL,SAAU5H,EAAuBtD,EAAvBsD,UAAcE,EAAhC,YAAyCxD,EAAzC,IACMyD,EAAU9B,KAEhB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,iBACM6B,EADN,CAEEF,UAAWK,YAAKF,EAAQ5B,KAAMyB,GAC9B0C,MAAM,qCAEJkF,GAAY,kBAAC,EAAD,MACd,kBAAC,GAAD,CAAS5H,UAAWG,EAAQsH,c,6CCjC5B9K,EAAakL,EAAQ,GAArBlL,SAsBOmI,IApBK,WAClB,MAAwBnI,EAAS,GAAjC,mBAAOoI,EAAP,KAAa+C,EAAb,KACA,EAAsCnL,EAAS,IAA/C,mBAAOqI,EAAP,KAAoB+C,EAApB,KAUA,MAAO,CACLhD,OACAC,cACAC,iBAXuB,SAAC+C,EAAOjD,GAC/B+C,EAAQ/C,IAWRG,wBAR8B,SAAA8C,GAC9BD,EAAeC,EAAMC,OAAOxK,W,oDCSjBsD,IAlBG,SAACmH,GACjB,MAA2BvL,mBAASuL,GAApC,mBAAO7F,EAAP,KAAgB8F,EAAhB,KAUA,MAAO,CACL9F,UACAE,YANkB,WAClB4F,GAAQ,IAMRlG,WAXiB,WACjBkG,GAAQ,O,iCCNZ,mBAMeC,gBAA4BlM,gBAAoB,OAAQ,CACrEmM,EAAG,qDACD,uB,iCCRJ,mBAMeD,gBAA4BlM,gBAAoB,OAAQ,CACrEmM,EAAG,uDACD,sB,iCCRJ,uDAaIC,EAAY,CACd/H,QAAS,QAGP+E,EAAyBpJ,cAAiB,SAAmBQ,EAAO6L,GACtE,IAAIpI,EAAUzD,EAAMyD,QAChBH,EAAYtD,EAAMsD,UAClBwI,EAAmB9L,EAAMmF,UACzB4G,OAAiC,IAArBD,EALK,QAK4CA,EAC7DE,EAAQC,YAAyBjM,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBR,gBAAoB0M,IAAiBzK,SAAU,CACjEV,MAAO6K,GACOpM,gBAAoBuM,EAAWI,YAAS,CACtD7I,UAAWK,YAAKF,EAAQ5B,KAAMyB,GAC9BuI,IAAKA,EACLO,KAbmB,UAabL,EAAiC,KAAO,YAC7CC,QA2BUK,gBAlDK,CAElBxK,KAAM,CACJE,QAAS,uBA+CqB,CAChCyE,KAAM,gBADO6F,CAEZzD,I,uKC/CC0D,EAAoB9M,gBAAoB+M,IAAoB,MAE5DC,EAAqBhN,gBAAoBiN,IAAmB,MAE5DC,EAAqBlN,gBAAoBiN,IAAmB,MAE5DE,EAAqBnN,gBAAoB+M,IAAoB,MAgFlDK,EA9E2BpN,cAAiB,SAAgCQ,EAAO6L,GAChG,IAAIgB,EAAsB7M,EAAM6M,oBAC5BtD,EAAQvJ,EAAMuJ,MACduD,EAAsB9M,EAAM8M,oBAC5BC,EAAsB/M,EAAMwJ,aAC5BA,OAAuC,IAAxBuD,EAAiC,aAAiBA,EACjEC,EAAsBhN,EAAMiN,aAC5BA,OAAuC,IAAxBD,EAAiC,aAAiBA,EACjE3E,EAAOrI,EAAMqI,KACbC,EAActI,EAAMsI,YACpB0D,EAAQC,YAAyBjM,EAAO,CAAC,sBAAuB,QAAS,sBAAuB,eAAgB,eAAgB,OAAQ,gBAExIwH,EAAQ0F,cAYZ,OAAoB1N,gBAAoB,MAAO2M,YAAS,CACtDN,IAAKA,GACJG,GAAqBxM,gBAAoB2N,IAAYhB,YAAS,CAC/D7G,QAb0B,SAA+BgG,GACzD9B,EAAa8B,EAAOjD,EAAO,GAC3B4E,EAAa3B,EAAOjD,EAAO,IAY3BzB,SAAmB,IAATyB,EACV7C,MAAO,WACNqH,GAA0C,QAApBrF,EAAM4F,UAAsBd,EAAOE,GAAqBhN,gBAAoB2N,IAAYhB,YAAS,CACxH7G,QAZ0B,SAA+BgG,GACzD9B,EAAa8B,EAAOjD,EAAO,GAC3B4E,EAAa3B,EAAOjD,EAAO,IAW3BzB,UAAqB,IAAX2C,GAAelB,GAAQgF,KAAKC,KAAK/D,EAAQjB,GAAe,EAClE9C,MAAO,WACNsH,GAA0C,QAApBtF,EAAM4F,UAAsBV,EAAQC,O,SC6B3DY,EAA4B,SAAmCjB,GACjE,IAAIkB,EAAOlB,EAAKkB,KACZC,EAAKnB,EAAKmB,GACVlE,EAAQ+C,EAAK/C,MACjB,MAAO,GAAGmE,OAAOF,EAAM,KAAKE,OAAOD,EAAI,QAAQC,QAAkB,IAAXnE,EAAeA,EAAQ,aAAamE,OAAOD,KAG/FE,EAA4B,CAAC,GAAI,GAAI,GAAI,KAKzCrE,EAA+B9J,cAAiB,SAAyBQ,EAAO6L,GAClF,IA+BI+B,EA/BAC,EAAwB7N,EAAM8N,iBAC9BA,OAA6C,IAA1BD,EAAmCjB,EAAyBiB,EAC/EhB,EAAsB7M,EAAM6M,oBAC5BkB,EAAwB/N,EAAMgO,mBAC9BA,OAA+C,IAA1BD,EAAmC,gBAAkBA,EAC1EtK,EAAUzD,EAAMyD,QAChBH,EAAYtD,EAAMsD,UAClB2K,EAAcjO,EAAM4N,QACpB9B,EAAmB9L,EAAMmF,UACzB4G,OAAiC,IAArBD,EAA8BhD,IAAYgD,EACtDvC,EAAQvJ,EAAMuJ,MACd2E,EAAwBlO,EAAMmO,mBAC9BA,OAA+C,IAA1BD,EAAmCX,EAA4BW,EACpFE,EAAwBpO,EAAMqO,iBAC9BA,OAA6C,IAA1BD,EAAmC,iBAAmBA,EACzEtB,EAAsB9M,EAAM8M,oBAC5BwB,EAAwBtO,EAAMuO,mBAC9BA,OAA+C,IAA1BD,EAAmC,YAAcA,EACtE9E,EAAexJ,EAAMwJ,aACrByD,EAAejN,EAAMiN,aACrBuB,EAA0BxO,EAAMyJ,oBAChCgF,EAA0BzO,EAAM0O,oBAChCrG,EAAOrI,EAAMqI,KACbC,EAActI,EAAMsI,YACpBqG,EAAwB3O,EAAM0J,mBAC9BA,OAA+C,IAA1BiF,EAAmChB,EAA4BgB,EACpFC,EAAqB5O,EAAM6O,YAC3BA,OAAqC,IAAvBD,EAAgC,GAAKA,EACnD5C,EAAQC,YAAyBjM,EAAO,CAAC,mBAAoB,sBAAuB,qBAAsB,UAAW,YAAa,UAAW,YAAa,QAAS,qBAAsB,mBAAoB,sBAAuB,qBAAsB,eAAgB,eAAgB,sBAAuB,sBAAuB,OAAQ,cAAe,qBAAsB,gBAErXyJ,EAAsB+E,GAA2BC,EAGjD1C,IAAcjD,KAA2B,OAAdiD,IAC7B6B,EAAUK,GAAe,KAG3B,IAAIa,EAAWC,cACXC,EAAUD,cACVE,EAAoBJ,EAAYK,OAAS,SAAWlI,IACxD,OAAoBxH,gBAAoBuM,EAAWI,YAAS,CAC1D7I,UAAWK,YAAKF,EAAQ5B,KAAMyB,GAC9BsK,QAASA,EACT/B,IAAKA,GACJG,GAAqBxM,gBAAoB2P,IAAS,CACnD7L,UAAWG,EAAQ2L,SACL5P,gBAAoB,MAAO,CACzC8D,UAAWG,EAAQ4L,SACjB3F,EAAmB7C,OAAS,GAAkBrH,gBAAoB0F,IAAY,CAChFM,MAAO,UACP3B,QAAS,QACTP,UAAWG,EAAQ6L,QACnBhO,GAAI0N,GACHX,GAAmB3E,EAAmB7C,OAAS,GAAkBrH,gBAAoB+P,IAAQpD,YAAS,CACvG1I,QAAS,CACPqD,OAAQrD,EAAQqD,OAChByD,KAAM9G,EAAQ+L,YAEhBC,MAAoBjQ,gBAAoBkQ,IAAW,CACjDpM,UAAWK,YAAKF,EAAQgM,MAAOhM,EAAQkM,cAEzC5O,MAAOuH,EACPsH,SAAUnG,EACVnI,GAAIwN,EACJE,QAASA,GACRH,GAAcnF,EAAmB3C,KAAI,SAAU8I,GAChD,OAAoBrQ,gBAAoByP,EAAmB,CACzD3L,UAAWG,EAAQqM,SACnB7I,IAAK4I,EAAkB9O,MAAQ8O,EAAkB9O,MAAQ8O,EACzD9O,MAAO8O,EAAkB9O,MAAQ8O,EAAkB9O,MAAQ8O,GAC1DA,EAAkBhN,MAAQgN,EAAkBhN,MAAQgN,OACvCrQ,gBAAoB0F,IAAY,CAChDM,MAAO,UACP3B,QAAS,QACTP,UAAWG,EAAQ6L,SAClBnB,EAAmB,CACpBX,KAAgB,IAAVjE,EAAc,EAAIlB,EAAOC,EAAc,EAC7CmF,IAAe,IAAXlE,EAAe8D,KAAK0C,IAAIxG,GAAQlB,EAAO,GAAKC,IAAgBD,EAAO,GAAKC,EAC5EiB,OAAkB,IAAXA,GAAgB,EAAIA,EAC3BlB,KAAMA,KACU7I,gBAAoBsO,EAAkB,CACtDxK,UAAWG,EAAQsE,QACnB8E,oBAAqBV,YAAS,CAC5BnG,MAAOgI,EACP,aAAcA,GACbnB,GACHtD,MAAOA,EACPuD,oBAAqBX,YAAS,CAC5BnG,MAAOuI,EACP,aAAcA,GACbzB,GACHtD,aAAcA,EACdyD,aAAcA,EACd5E,KAAMA,EACNC,YAAaA,SAqJF+D,iBAnUK,SAAgB7E,GAClC,MAAO,CAEL3F,KAAM,CACJ2D,MAAOgC,EAAM8C,QAAQ0F,KAAKC,QAC1BC,SAAU1I,EAAM2I,WAAWC,QAAQ,IACnChO,SAAU,OAEV,eAAgB,CACdM,QAAS,IAKb0M,QAAS,CACPiB,UAAW,GACXC,aAAc,GAIhBjB,OAAQ,CACNkB,KAAM,YAIRjB,QAAS,CACPkB,WAAY,GAKdb,WAAY,CACV7H,YAAa,GACb4C,WAAY,GAId5D,OAAQ,CACN2J,YAAa,EACbH,aAAc,GACdI,UAAW,QACXC,cAAe,SAMjBnB,WAAY,GAGZC,MAAO,CACLjK,MAAO,UACP0K,SAAU,UACVM,WAAY,GAIdV,SAAU,GAGV/H,QAAS,CACPyI,WAAY,EACZ9F,WAAY,OAqQgB,CAChClE,KAAM,sBADO6F,CAEZ/C","file":"static/js/12.37db12e9.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"services/axios\";\n\nconst questionsContext = React.createContext();\n\nexport const useQuestionsContext = () => {\n  const context = React.useContext(questionsContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useQuestionsContext must be used within a QuestionProvider\"\n    );\n  }\n  return context;\n};\n\nexport const QuestionsProvider = (props) => {\n  const [questions, setQuestions] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n\n  const getQuestions = async () => {\n    try {\n      const res = await (await axios.get(\"/questions\")).data;\n\n      setQuestions(res.data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getQuestions();\n  }, []);\n\n  const value = React.useMemo(() => {\n    const addQuestion = async (question) => {\n      try {\n        const res = await (await axios.post(\"/questions\", question)).data;\n        getQuestions();\n        return res;\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    const updateQuestion = async (question) => {\n      try {\n        const res = await (\n          await axios.put(`/questions/${question.id}`, question)\n        ).data;\n        getQuestions();\n        return res;\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    const deleteQuestion = async (id) => {\n      try {\n        const res = await (await axios.delete(`/questions/${id}`)).data;\n        getQuestions();\n        return res;\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    return {\n      questions,\n      loading,\n      error,\n      addQuestion,\n      updateQuestion,\n      deleteQuestion,\n    };\n  }, [questions, loading, error]);\n\n  return (\n    <questionsContext.Provider value={value}>\n      {props.children}\n    </questionsContext.Provider>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  FormLabel,\n  TextField,\n  Box,\n  InputAdornment,\n  Checkbox,\n  MenuItem,\n} from \"@material-ui/core\";\nimport useToggle from \"hooks/use-toggle\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport axios from \"services/axios\";\nimport { useQuestionsContext } from \"../../hooks/questions-context\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  card: {\n    maxHeight: \"90vh\",\n    overflow: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      width: 0,\n    },\n  },\n  form: {\n    width: \"100%\",\n    maxWidth: \"700px\",\n    position: \"relative\",\n  },\n\n  submitBtn: {\n    padding: \"0.5rem 3rem\",\n  },\n  multiAnswers: {\n    display: \"flex\",\n    marginBottom: \"0.5rem\",\n    alignItems: \"center\",\n  },\n  label: {\n    marginBottom: \"0.75rem\",\n  },\n}));\n\nconst defaultValue = {\n  content: \"\",\n  subject: \"\",\n  answers: [\n    {\n      content: \"\",\n      short_name: \"A\",\n      status: false,\n    },\n    {\n      content: \"\",\n      short_name: \"B\",\n      status: false,\n    },\n    {\n      content: \"\",\n      short_name: \"C\",\n      status: false,\n    },\n    {\n      content: \"\",\n      short_name: \"D\",\n      status: false,\n    },\n  ],\n};\n\nconst InputWithStartAdornment = (props) => {\n  const { adornment, className, register, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <TextField\n      {...register}\n      {...rest}\n      className={clsx(classes.multiAnswers, className)}\n      fullWidth\n      variant=\"outlined\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">{adornment}</InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nconst Header = (props) => {\n  const { className, openAddQuestionModal, ...rest } = props;\n\n  const [subjects, setSubjects] = React.useState([]);\n\n  const classes = useStyles();\n  const modal = useToggle(false);\n  const form = useForm({\n    defaultValues: defaultValue,\n  });\n\n  const { addQuestion } = useQuestionsContext();\n\n  const onSubmit = async (data) => {\n    await addQuestion(data);\n    console.log(data);\n    form.reset();\n    // modal.handleClose();\n  };\n\n  React.useEffect(() => {\n    const getSubjects = async () => {\n      const res = await (await axios.get(`/subjects`)).data;\n\n      setSubjects(res.data);\n    };\n    getSubjects();\n  }, []);\n\n  return (\n    <>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <Grid\n          alignItems=\"flex-end\"\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography component=\"h2\" gutterBottom variant=\"overline\">\n              Quản lý\n            </Typography>\n            <Typography component=\"h1\" variant=\"h3\">\n              Câu hỏi trắc nghiệm\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              onClick={modal.handleOpen}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Thêm câu hỏi\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n\n      <Modal\n        className={classes.modal}\n        open={modal.is_open}\n        onClose={modal.handleClose}\n      >\n        <Card className={classes.card}>\n          <CardHeader\n            title={\n              <Typography variant=\"h2\">Thêm câu hỏi trắc nghiệm</Typography>\n            }\n          />\n          <CardContent>\n            <form\n              className={classes.form}\n              onSubmit={form.handleSubmit(onSubmit)}\n              autoComplete=\"off\"\n            >\n              <Grid container spacing={4}>\n                <Grid item xs={12}>\n                  <FormLabel className={classes.label} component=\"legend\">\n                    Nội dung câu hỏi\n                  </FormLabel>\n                  <TextField\n                    {...form.register(\"content\")}\n                    fullWidth\n                    multiline\n                    rows={4}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormLabel className={classes.label} component=\"legend\">\n                    Môn học\n                  </FormLabel>\n                  <Controller\n                    name=\"subject_id\"\n                    control={form.control}\n                    render={({ field }) => (\n                      <TextField\n                        disabled={subjects.length <= 0}\n                        select\n                        {...field}\n                        variant=\"outlined\"\n                        fullWidth\n                      >\n                        {subjects.map((subject) => (\n                          <MenuItem key={subject.id} value={subject.id}>\n                            {subject.name}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormLabel className={classes.label} component=\"legend\">\n                    Câu trả lời\n                  </FormLabel>\n                  {form.getValues(\"answers\")?.map((answer, idx) => (\n                    <Box\n                      key={answer.short_name}\n                      className={classes.multiAnswers}\n                    >\n                      <InputWithStartAdornment\n                        register={{\n                          ...form.register(`answers.${idx}.content`),\n                        }}\n                        adornment={answer.short_name + \".\"}\n                      />\n                      <Checkbox\n                        {...form.register(`answers.${idx}.status`)}\n                        color=\"primary\"\n                      />\n                    </Box>\n                  ))}\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Button\n                    className={classes.submitBtn}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                  >\n                    Thêm câu hỏi\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </Modal>\n    </>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  openAddQuestionModal: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Modal,\n  Grid,\n  FormLabel,\n  TextField,\n  MenuItem,\n  Box,\n  InputAdornment,\n  Checkbox,\n} from \"@material-ui/core\";\n\nimport { ErrorButton, GenericMoreButton } from \"components\";\nimport usePaginate from \"hooks/use-paginate\";\nimport { useQuestionsContext } from \"../../hooks/questions-context\";\nimport useToggle from \"hooks/use-toggle\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport axios from \"services/axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 700,\n  },\n  nameCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1),\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: \"flex-end\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  card: {\n    maxHeight: \"90vh\",\n    overflow: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      width: 0,\n    },\n  },\n  form: {\n    width: \"100%\",\n    maxWidth: \"700px\",\n    position: \"relative\",\n  },\n\n  submitBtn: {\n    padding: \"0.5rem 3rem\",\n  },\n  multiAnswers: {\n    display: \"flex\",\n    marginBottom: \"0.5rem\",\n    alignItems: \"center\",\n  },\n  label: {\n    marginBottom: \"0.75rem\",\n  },\n}));\n\nconst InputWithStartAdornment = (props) => {\n  const { adornment, className, register, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <TextField\n      {...register}\n      {...rest}\n      className={clsx(classes.multiAnswers, className)}\n      fullWidth\n      variant=\"outlined\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">{adornment}</InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nconst Results = (props) => {\n  const { className, reviewQuestion, ...rest } = props;\n\n  const classes = useStyles();\n  const modal = useToggle(false);\n  const form = useForm();\n  const { questions, updateQuestion, deleteQuestion } = useQuestionsContext();\n\n  const [subjects, setSubjects] = React.useState([]);\n  React.useEffect(() => {\n    const getSubjects = async () => {\n      const res = await (await axios.get(`/subjects`)).data;\n\n      setSubjects(res.data);\n    };\n    getSubjects();\n  }, []);\n\n  const onSubmit = async (data) => {\n    await updateQuestion(data);\n  };\n\n  console.log(subjects);\n\n  const getQuestions = async (id) => {\n    const res = await (await axios.get(`/questions/${id}`)).data;\n\n    form.setValue(\"id\", id);\n    form.setValue(\"content\", res.data.content);\n    form.setValue(\"subject_id\", res.data.subject_id);\n    form.setValue(\"answers\", res.data.answers);\n    modal.handleOpen();\n  };\n\n  const {\n    page,\n    rowsPerPage,\n    handleChangePage,\n    handleChangeRowsPerPage,\n  } = usePaginate();\n\n  return (\n    <>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n          Tổng {questions.length} Câu hỏi\n        </Typography>\n        <Card>\n          <CardHeader action={<GenericMoreButton />} title=\"Tất cả câu hỏi\" />\n          <Divider />\n\n          <CardContent className={classes.content}>\n            <PerfectScrollbar>\n              <div className={classes.inner}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Nội dung</TableCell>\n                      <TableCell>Môn học</TableCell>\n                      <TableCell align=\"right\">Tác vụ</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {questions.slice(0, rowsPerPage).map((question) => (\n                      <TableRow hover key={question.id}>\n                        <TableCell>\n                          <div className={classes.nameCell}>\n                            <div>\n                              <Typography color=\"inherit\" variant=\"h6\">\n                                {question.content}\n                              </Typography>\n                            </div>\n                          </div>\n                        </TableCell>\n                        <TableCell>{question.subject_name}</TableCell>\n\n                        <TableCell align=\"right\">\n                          <Button\n                            color=\"primary\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => getQuestions(question.id)}\n                          >\n                            Chi tiết\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </PerfectScrollbar>\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <TablePagination\n              component=\"div\"\n              count={questions.length}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              page={page}\n              rowsPerPage={rowsPerPage}\n              rowsPerPageOptions={[5, 10, 25]}\n            />\n          </CardActions>\n        </Card>\n      </div>\n      <Modal\n        className={classes.modal}\n        open={modal.is_open}\n        onClose={modal.handleClose}\n      >\n        <Card className={classes.card}>\n          <CardHeader\n            title={\n              <Typography variant=\"h2\">Thêm câu hỏi trắc nghiệm</Typography>\n            }\n          />\n          <CardContent>\n            <form\n              className={classes.form}\n              onSubmit={form.handleSubmit(onSubmit)}\n              autoComplete=\"off\"\n            >\n              <Grid container spacing={4}>\n                <Grid item xs={12}>\n                  <FormLabel className={classes.label} component=\"legend\">\n                    Nội dung câu hỏi\n                  </FormLabel>\n                  <TextField\n                    {...form.register(\"content\")}\n                    fullWidth\n                    multiline\n                    rows={4}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormLabel className={classes.label} component=\"legend\">\n                    Môn học\n                  </FormLabel>\n                  <Controller\n                    name=\"subject_id\"\n                    control={form.control}\n                    render={({ field }) => (\n                      <TextField\n                        disabled={subjects?.length <= 0}\n                        select\n                        {...field}\n                        variant=\"outlined\"\n                        fullWidth\n                      >\n                        {subjects?.map((subject) => (\n                          <MenuItem key={subject.id} value={subject.id}>\n                            {subject.name}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormLabel className={classes.label} component=\"legend\">\n                    Câu trả lời\n                  </FormLabel>\n                  {form.getValues(\"answers\")?.map((answer, idx) => (\n                    <Box key={idx} className={classes.multiAnswers}>\n                      <InputWithStartAdornment\n                        register={{\n                          ...form.register(`answers.${idx}.content`),\n                        }}\n                        adornment={idx + \".\"}\n                      />\n\n                      <Checkbox\n                        defaultChecked={answer.status}\n                        {...form.register(`answers.${idx}.status`)}\n                        color=\"primary\"\n                      />\n                    </Box>\n                  ))}\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Button\n                    className={classes.submitBtn}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                  >\n                    Cập nhật\n                  </Button>\n\n                  <ErrorButton\n                    className={classes.submitBtn}\n                    variant=\"contained\"\n                    fullWidth\n                    style={{ marginTop: \"10px\" }}\n                    onClick={() => {\n                      deleteQuestion(form.getValues(\"id\"));\n                      modal.handleClose();\n                    }}\n                  >\n                    Xóa câu hỏi\n                  </ErrorButton>\n                </Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </Modal>\n    </>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  questions: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  questions: [],\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Box, Button, Drawer } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  drawer: {\n    width: 420,\n    maxWidth: \"100%\",\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1,\n  },\n  actions: {\n    padding: theme.spacing(3),\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst objectToQueryString = obj => {\n  if (typeof obj !== \"object\") return \"\";\n  let queryString = \"\";\n  for (const key in obj) {\n    queryString += key + \"=\" + obj[key] + \"&\";\n  }\n  return queryString.slice(0, -1);\n};\n\nconst Filter = props => {\n  const { open, onClose, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n    name: \"asc\",\n    role: \"student\",\n  };\n\n  const [values, setValues] = useState({ ...initialValues });\n  const history = useHistory();\n\n  const handleClear = () => {\n    setValues({ ...initialValues });\n    history.replace(history.location.pathname);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    history.push(\"?\" + objectToQueryString(values));\n  };\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\">\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}>\n        <Box className={classes.header}>\n          <Button onClick={onClose} size=\"small\">\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </Box>\n        <Box className={classes.content}></Box>\n        <Box className={classes.actions}>\n          <Button fullWidth onClick={handleClear} variant=\"contained\" yarn>\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button color=\"primary\" fullWidth type=\"submit\" variant=\"contained\">\n            Apply filters\n          </Button>\n        </Box>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search\"\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={onSearch}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst SearchBar = props => {\n  const { onFilter, onSearch, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n      <Grid item>\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Show filters\n        </Button>\n      </Grid>\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n      />\n    </Grid>\n  );\n};\n\nSearchBar.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { Page } from \"components\";\nimport { Header, Results } from \"./components\";\nimport clsx from \"clsx\";\nimport { QuestionsProvider } from \"./hooks/questions-context\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n  modal: {\n    display: \"grid\",\n    placeItems: \"center\",\n  },\n}));\n\nconst Questions = (props) => {\n  const { headless, className, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <QuestionsProvider>\n      <Page\n        {...rest}\n        className={clsx(classes.root, className)}\n        title=\"Ngân hàng câu hỏi\"\n      >\n        {!headless && <Header />}\n        <Results className={classes.results} />\n      </Page>\n    </QuestionsProvider>\n  );\n};\n\nexport default Questions;\n","const { useState } = require(\"react\");\n\nconst usePaginate = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return {\n    page,\n    rowsPerPage,\n    handleChangePage,\n    handleChangeRowsPerPage,\n  };\n};\n\nexport default usePaginate;\n","import { useState } from \"react\";\n\nconst useToggle = (initialState) => {\n  const [is_open, setOpen] = useState(initialState);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return {\n    is_open,\n    handleClose,\n    handleOpen,\n  };\n};\n\nexport default useToggle;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"],"sourceRoot":""}