{"version":3,"sources":["views/ForgotPassword/components/LoginForm/LoginForm.js","views/ForgotPassword/ForgotPassword.js"],"names":["schema","email","presence","allowEmpty","message","useStyles","makeStyles","theme","root","fields","margin","spacing","display","flexWrap","flexGrow","submitButton","marginTop","width","LoginForm","props","className","rest","classes","router","useRouter","useState","isValid","values","touched","errors","formState","setFormState","useEffect","validate","handleSubmit","event","a","preventDefault","history","push","hasError","field","clsx","onSubmit","autoComplete","TextField","error","fullWidth","helperText","name","onChange","persist","target","type","checked","value","variant","Button","color","disabled","size","height","alignItems","justifyContent","padding","card","breakpoints","md","maxWidth","overflow","position","flexBasis","content","icon","backgroundImage","gradients","green","palette","white","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","ForgotPassword","title","Card","CardContent","Typography","gutterBottom","Divider"],"mappings":"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","file":"static/js/24.615eadf8.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport validate from \"validate.js\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nimport useRouter from \"utils/useRouter\";\nimport { login } from \"actions\";\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  fields: {\n    margin: theme.spacing(-1),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      flexGrow: 1,\n      margin: theme.spacing(1),\n    },\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\n\nconst LoginForm = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const router = useRouter();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((formState) => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((formState) => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === \"checkbox\"\n            ? event.target.checked\n            : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    router.history.push(\"/\");\n  };\n\n  const hasError = (field) =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <form\n      {...rest}\n      className={clsx(classes.root, className)}\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <div className={classes.fields}>\n        <TextField\n          error={hasError(\"email\")}\n          fullWidth\n          helperText={hasError(\"email\") ? formState.errors.email[0] : null}\n          name=\"email\"\n          onChange={handleChange}\n          value={formState.values.email || \"\"}\n          variant=\"outlined\"\n        />\n      </div>\n      <Button\n        className={classes.submitButton}\n        color=\"secondary\"\n        disabled={!formState.isValid}\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        Reset password\n      </Button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Page } from \"components\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport gradients from \"utils/gradients\";\nimport { Card, CardContent, Divider, Typography } from \"@material-ui/core\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { LoginForm } from \"./components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(6, 2),\n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: 600,\n    overflow: \"unset\",\n    display: \"flex\",\n    position: \"relative\",\n    \"& > *\": {\n      flexGrow: 1,\n      flexBasis: \"50%\",\n      width: \"50%\",\n    },\n  },\n  content: {\n    padding: theme.spacing(8, 4, 3, 4),\n  },\n\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: \"absolute\",\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32,\n  },\n  loginForm: {\n    marginTop: theme.spacing(3),\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n  person: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction ForgotPassword(props) {\n  const classes = useStyles();\n  return (\n    <Page className={classes.root} title=\"Forgot password\">\n      <Card className={classes.card}>\n        <CardContent className={classes.content}>\n          <LockIcon className={classes.icon} />\n          <Typography gutterBottom variant=\"h3\">\n            Enter your email\n          </Typography>\n          <LoginForm className={classes.loginForm} />\n          <Divider className={classes.divider} />\n        </CardContent>\n      </Card>\n    </Page>\n  );\n}\n\nForgotPassword.propTypes = {};\n\nexport default ForgotPassword;\n"],"sourceRoot":""}