{"version":3,"sources":["views/Login/components/LoginForm/LoginForm.js","views/Login/Login.js"],"names":["schema","email","presence","allowEmpty","message","password","useStyles","makeStyles","theme","root","fields","margin","spacing","display","flexWrap","flexGrow","submitButton","width","divider","LoginForm","props","className","rest","classes","auth","useRouter","useAuth","useState","isValid","values","touched","errors","formState","setFormState","useEffect","validate","handleChange","event","persist","target","name","type","checked","value","handleSubmit","a","preventDefault","signin","hasError","field","autoComplete","clsx","onSubmit","TextField","error","fullWidth","helperText","label","onChange","variant","Button","color","disabled","size","Typography","align","onClick","signInWithPopup","height","alignItems","justifyContent","padding","card","breakpoints","md","maxWidth","overflow","position","flexBasis","content","icon","backgroundImage","gradients","green","palette","white","borderRadius","shape","top","left","fontSize","loginForm","marginTop","Login","authState","to","user","role","title","Card","CardContent","gutterBottom","Divider"],"mappings":"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","file":"static/js/25.4a18c29c.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport validate from 'validate.js';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Divider, TextField, Typography } from '@material-ui/core';\n\nimport useRouter from 'utils/useRouter';\nimport { useAuth } from 'hooks/use-auth';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    margin: theme.spacing(2, 0),\n    width: '100%'\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const router = useRouter();\n\n  const auth = useAuth();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n    const { email, password } = formState.values;\n    auth.signin(email, password);\n    // router.history.push('/');\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <form\n      {...rest}\n      autoComplete=\"off\"\n      className={clsx(classes.root, className)}\n      onSubmit={handleSubmit}>\n      <div className={classes.fields}>\n        <TextField\n          error={hasError('email')}\n          fullWidth\n          helperText={hasError('email') ? formState.errors.email[0] : null}\n          label=\"Email address\"\n          name=\"email\"\n          onChange={handleChange}\n          value={formState.values.email || ''}\n          variant=\"outlined\"\n        />\n        <TextField\n          error={hasError('password')}\n          fullWidth\n          helperText={\n            hasError('password') ? formState.errors.password[0] : null\n          }\n          label=\"Mật khẩu\"\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          value={formState.values.password || ''}\n          variant=\"outlined\"\n        />\n      </div>\n      <Button\n        className={classes.submitButton}\n        color=\"secondary\"\n        disabled={!formState.isValid}\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\">\n        Đăng nhập\n      </Button>\n      <Typography align=\"center\" variant=\"body2\">\n        hoặc\n      </Typography>\n      <Button\n        className={classes.submitButton}\n        color=\"secondary\"\n        onClick={auth.signInWithPopup}\n        size=\"large\"\n        variant=\"outlined\">\n        Đăng nhập với Google\n      </Button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Typography, Divider } from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport { Page } from 'components';\nimport gradients from 'utils/gradients';\nimport { LoginForm } from './components';\nimport { useAuth } from 'hooks/use-auth';\nimport { Redirect } from 'react-router';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(6, 2)\n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 3, 4)\n  },\n\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const auth = useAuth();\n\n  if (auth.authState === 'success') {\n    return (\n      <Redirect to={auth.user?.role ? '/' + auth.user?.role : '/student'} />\n    );\n  }\n\n  if (auth.authState === 'pending') {\n    return (\n      <Typography align=\"center\" variant=\"body2\">\n        Authenticating\n      </Typography>\n    );\n  }\n\n  return (\n    <Page className={classes.root} title=\"Đăng nhập\">\n      <Card className={classes.card}>\n        <CardContent className={classes.content}>\n          <LockIcon className={classes.icon} />\n          <Typography gutterBottom variant=\"h3\">\n            Đăng nhập\n          </Typography>\n          <Typography variant=\"subtitle2\">Truy cập vào hệ thống</Typography>\n          <LoginForm className={classes.loginForm} />\n          <Divider className={classes.divider} />\n        </CardContent>\n      </Card>\n    </Page>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}